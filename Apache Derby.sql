CREATE TABLE quantity_unit (
id INTEGER PRIMARY KEY NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
"name" VARCHAR(10) NOT NULL,
UNIQUE ("name")
);

CREATE TABLE items (
id INTEGER PRIMARY KEY NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
"name" VARCHAR(50) NOT NULL,
"specification" VARCHAR(200),
"unit_id" INT NOT NULL,

CONSTRAINT fk_items_unit_id_references_quantity_unit_id
FOREIGN KEY ("unit_id") REFERENCES quantity_unit(id)
ON DELETE CASCADE

);

CREATE TABLE images (
id INTEGER PRIMARY KEY NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
"item_id" INT NOT NULL,
"name" VARCHAR(41) NOT NULL,
"order" INT NOT NULL,
"default_image" BOOLEAN NOT NULL,
"scale" DECIMAL(3,2) NOT NULL DEFAULT 0.6,

CONSTRAINT fk_images_item_id_references_items_id
FOREIGN KEY ("item_id") REFERENCES items(id)
ON DELETE CASCADE
);

CREATE TABLE recipients (
id INTEGER PRIMARY KEY NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
"name" VARCHAR(255) NOT NULL,
UNIQUE ("name")
);

CREATE TABLE source (
id INTEGER PRIMARY KEY NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
"information" VARCHAR(255) NOT NULL,
UNIQUE ("information")
);

CREATE TABLE inwards (
"id" INTEGER PRIMARY KEY NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
"item_id" INT NOT NULL,
"quantity" DECIMAL(8,2) NOT NULL,
"source_id" INT,
"date" DATE NOT NULL,

CONSTRAINT fk_inwards_item_id_references_items_id
FOREIGN KEY ("item_id") REFERENCES items(id)
ON DELETE CASCADE,
	
CONSTRAINT fk_inwards_source_id_references_source_id
FOREIGN KEY ("source_id") REFERENCES source(id)
ON DELETE CASCADE
);


CREATE TABLE outwards (
"id" INTEGER PRIMARY KEY NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
"item_id" INT NOT NULL,
"quantity" DECIMAL(8,2) NOT NULL,
"recipient_id" INT NOT NULL,
"for" VARCHAR(255) NOT NULL,
"date" DATE NOT NULL,

CONSTRAINT fk_outwards_item_id_references_items_id
FOREIGN KEY ("item_id") REFERENCES items(id)
ON DELETE CASCADE,
	
CONSTRAINT fk_outwards_recipient_id_references_recipients_id
FOREIGN KEY ("recipient_id") REFERENCES recipients(id)
ON DELETE CASCADE
);
